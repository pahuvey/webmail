<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
 
    
     <!-- le  entityManagerFactoryBean est un bean qui a une propriété la dataSource, il permet de fabriquer les entityManager
     		Les entityManager est une entité qui permet de faire le Mapping relationnel objet
     		entityManager permet de persister un objet dans la base de données relationnelle
     		jpaVendorAdapter est un adaptateur qui permet d'adapter l'utilisation de JPA/Hibernate dans Spring
     		
     -->
 
     <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <!-- This makes /META-INF/persistence.xml is no longer necessary -->
      <property name="packagesToScan" value="org.formation.webmail.model" />
      <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
      	   Exposes Hibernate's persistence provider and EntityManager extension interface -->
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
      </property>
      <property name="jpaProperties">
         <props>
            <prop key="hibernate.hbm2ddl.auto">validate</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
         </props>
      </property>
   </bean>
   
    <!-- un bean qui permet d'utiliser JTA (java Transaction API)
    	permet d'executer les méthodes dans une transaction
     --> 
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
      <property name="entityManagerFactory" ref="entityManagerFactoryBean" />
   </bean>
   
   <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management; 
        such as when @Transactional methods are invoked -->
        
     <!-- Permet d'utiliser l'annotation @Transactional pour dire qu'une méthode ou une classe est transactionnelle
     	exemple : voir AvangerDAOImpl
      -->   
   <tx:annotation-driven />

</beans>    